name: release

on:
 workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
      build_date:
        description: 'build date'
        required: true

permissions:
  contents: read # for actions/checkout to fetch code

env:
  VERSION: ${{ github.event.inputs.version }}
  BUILD_DATE: ${{ github.event.inputs.build_date }}
  LIBCRYPTO_VERSION: "3.1.4-r2"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    strategy:
      matrix:
        tf_version: [1.6.6]
    steps:
      - name: Check out
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
      - name: Setup QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0
        with:
          platforms: all
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        with:
          buildkitd-flags: "--debug"
      - name: Login to Docker Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to ghcr.io
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          no-cache: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./runner-azure.Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            BASE_IMAGE=ghcr.io/weaveworks/tf-runner:${{ env.VERSION }}-base
            TF_VERSION=${{ matrix.tf_version }}
            LIBCRYPTO_VERSION=${{ env.LIBCRYPTO_VERSION }}
          tags: |
            ghcr.io/yiannistri/tf-runner-azure:${{ env.VERSION }}-tf-${{ matrix.tf_version }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION }}
            org.opencontainers.image.created=${{ env.BUILD_DATE }}
    
